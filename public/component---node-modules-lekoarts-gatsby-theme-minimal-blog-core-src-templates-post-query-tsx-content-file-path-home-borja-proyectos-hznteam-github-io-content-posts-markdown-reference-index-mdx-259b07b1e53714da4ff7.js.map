{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-home-borja-proyectos-hznteam-github-io-content-posts-markdown-reference-index-mdx-259b07b1e53714da4ff7.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://minimal-blog/./content/posts/markdown-reference/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx","webpack://minimal-blog/./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.h1, null, \"Ya estamos aquÃ­, preparados para empezar nueva aventura.\");\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` â `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` â `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/borja/Proyectos/hznteam.github.io/content/posts/markdown-reference/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nvar query = \"2040642971\";\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}"],"names":["tags","useMinimalBlogConfig","tagsPath","basePath","jsx","React","map","tag","i","key","slug","Link","sx","t","styles","_t$styles","a","to","replaceSlashes","name","title","description","pathname","image","children","canonicalUrl","site","useSiteMetadata","siteTitle","defaultTitle","siteTitleAlt","siteUrl","defaultDescription","siteDescription","defaultImage","siteImage","author","seo","url","content","property","rel","type","sizes","href","withPrefix","_createMdxContent","props","_components","Object","assign","h1","_provideComponents","components","MDXLayout","wrapper","post","shadow","v","data","Layout","Heading","as","variant","color","mt","fontSize","date","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","Seo","excerpt","banner","_post$banner","childImageSharp","_post$banner$childIma","resize","_post$banner$childIma2","src","undefined","MinimalBlogCorePost","Post","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX","_objectDestructuringEmpty","obj","TypeError"],"sourceRoot":""}